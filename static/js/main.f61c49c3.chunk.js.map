{"version":3,"sources":["img/HomeIcon.svg","components/Nav.js","components/Home.js","components/Creator.js","components/Flashcards.js","components/Route.js","serviceWorker.js","index.js"],"names":["module","exports","to","process","src","HomeIcon","alt","props","onSubmit","addWord","id","wordSets","map","set","index","className","key","onClick","editHandler","type","value","front","onChange","e","editing","back","del","placeholder","pair","change","card","flipped","onNext","WordBank","state","words","JSON","parse","localStorage","getItem","currentPair","currentIndex","saveData","bind","setCurrentPair","addCurrentPair","nextCard","deleteIndex","editIndex","editCurrent","setItem","stringify","this","preventDefault","newPair","Object","assign","target","setState","filter","word","length","newWordSet","push","toEnd","wordCopy","splice","isFront","editedWords","exact","path","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f61c49c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HomeIcon.5d3b7993.svg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport HomeIcon from '../img/HomeIcon.svg';\nimport '../css/Nav.css';\n\nexport default() => {\n\treturn(\n\t\t<nav>\n\t\t\t<Link to={process.env.PUBLIC_URL + \"/\"}><img src={HomeIcon} alt=\"Home\"></img></Link>\n\t\t</nav>\n\t);\n}\n","import React from 'react';\nimport '../css/Home.css'\nimport {Link} from \"react-router-dom\";\n\nexport default() => {\n\treturn(\n\t\t<main>\n\t\t\t<header>Home</header>\n\t\t\t<Link to={process.env.PUBLIC_URL + \"/create\"}>Make Cards</Link>\n\t\t\t<Link to={process.env.PUBLIC_URL + \"/cards\"}>Use Cards</Link>\n\t\t</main>\n\t);\n};\n","import React from 'react';\nimport '../css/Creator.css';\n\nexport default(props) => {\n\treturn(\n\t\t<>\n\t\t\t<p>Create your Flashcard Set</p>\n\t\t\t<form onSubmit={props.addWord}>\n\t\t\t\t<div id=\"wordsets\">\n\t\t\t\t\t{props.wordSets.map((set, index) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<div className=\"setContainer\">\n\t\t\t\t\t\t\t\t<div className=\"set\" key={\"wordsets[\" + index + \"]\"} onClick={() => props.editHandler(index)}>\n\t\t\t\t\t\t\t\t\t<input className=\"word\" type=\"text\" value={set.front} onChange={e => props.editing(e, true)}></input>\n\t\t\t\t\t\t\t\t\t<input className=\"define\" type=\"text\" value={set.back} onChange={e => props.editing(e, false)}></input>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"deleteButton pseudoInput\" onClick={() => props.del(index, false)}>Delete</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<div id=\"newCard\">\n\t\t\t\t\t<input className=\"word\" type=\"text\" placeholder=\"New Word\" value={props.pair[\"front\"]} onChange={e => {props.change(\"front\", e);}}></input>\n\t\t\t\t\t<input className=\"define\" type=\"text\" placeholder=\"New Definition\" value={props.pair[\"back\"]} onChange={e => {props.change(\"back\", e);}}></input>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"controlButtons\">\n\t\t\t\t\t<input type=\"submit\" value=\"Add Card\"></input>\n\t\t\t\t\t<div className=\"pseudoInput\" onClick={() => props.del(0, true)}>Delete All</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport '../css/Flashcards.css';\n\nexport default({card, flipped, onNext}) => {\n\treturn(\n\t\t<div id=\"Flashcards\">\n\t\t\t<header>\n\t\t\t\tFlashcards\n\t\t\t</header>\n\t\t\t<div id=\"card\" className={flipped ? \"flipped\" : null} onClick={onNext}>\n\t\t\t\t<div id=\"flipContainer\">\n\t\t\t\t\t<div id=\"front\">\n\t\t\t\t\t\t<p id=\"frontText\">\n\t\t\t\t\t\t\t{card ? card.front ? card.front : \"No Word\" : \"Add some words\"}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"back\">\n\t\t\t\t\t\t<p id=\"backText\">\n\t\t\t\t\t\t\t{card ? card.back ? flipped ? card.back : \"\" : \"No Definition\" : \"Add some definitions\"}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Nav from './Nav.js';\nimport Home from './Home.js';\nimport Creator from './Creator.js';\nimport Flashcards from './Flashcards.js';\n\nexport default class WordBank extends React.Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\twords: JSON.parse(localStorage.getItem(\"words\")) || [], //type Array.{front: string, back: string}\n\t\t\tcurrentPair: {\"front\": \"\", \"back\": \"\"},\n\t\t\tcurrentIndex: 0,\n\t\t\tediting: 0,\n\t\t\tflipped: false\n\t\t};\n\t\tthis.saveData = this.saveData.bind(this);\n\t\tthis.setCurrentPair = this.setCurrentPair.bind(this);\n\t\tthis.addCurrentPair = this.addCurrentPair.bind(this);\n\t\tthis.nextCard = this.nextCard.bind(this);\n\t\tthis.deleteIndex = this.deleteIndex.bind(this);\n\t\tthis.editIndex = this.editIndex.bind(this);\n\t\tthis.editCurrent = this.editCurrent.bind(this);\n\t}\n\n\tsaveData()\n\t{\n\t\tlocalStorage.setItem(\"words\", JSON.stringify(this.state.words));\n\t}\n\n\tsetCurrentPair(index, e)\n\t{\n\t\te.preventDefault();\n\t\tvar newPair = Object.assign({}, this.state.currentPair);\n\t\tnewPair[index] = e.target.value;\n\t\tthis.setState({\n\t\t\tcurrentPair: newPair\n\t\t});\n\t}\n\n\taddCurrentPair(e)\n\t{\n\t\te.preventDefault();\n\t\tif(this.state.currentPair.front === \"\" && this.state.currentPair.back === \"\") return;\n\t\tif(this.state.words.filter(word => word.front === this.state.currentPair.front).length) return;\n\t\tvar newWordSet = [...this.state.words];\n\t\tnewWordSet.push(this.state.currentPair);\n\t\tthis.setState({\n\t\t\twords: newWordSet,\n\t\t\tcurrentPair: {\"front\": \"\", \"back\": \"\"}\n\t\t}, this.saveData);\n\t}\n\n\tnextCard()\n\t{\n\t\tif(this.state.flipped)\n\t\t{\n\t\t\tthis.setState({\n\t\t\t\tflipped: false,\n\t\t\t\tcurrentIndex: (this.state.currentIndex + 1) % this.state.words.length \n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setState({\n\t\t\t\tflipped: true\n\t\t\t});\n\t\t}\n\t}\n\n\tdeleteIndex(index, toEnd)\n\t{\n\t\tvar wordCopy = [...this.state.words];\n\t\twordCopy.splice(index, toEnd ? wordCopy.length - index : 1);\n\t\tthis.setState({\n\t\t\twords: wordCopy\n\t\t}, this.saveData);\n\t}\n\n\teditIndex(index)\n\t{\n\t\tif(this.state.editing === index) return;\n\t\tthis.setState({\n\t\t\tediting: index\n\t\t});\n\t}\n\n\teditCurrent(e, isFront)\n\t{\n\t\te.preventDefault();\n\t\tvar editedWords = [...this.state.words];\n\t\teditedWords[this.state.editing][isFront? \"front\" : \"back\"] = e.target.value;\n\t\tthis.setState({\n\t\t\twords: editedWords\n\t\t}, this.saveData);\n\t}\n\n\trender()\n\t{\n\t\treturn(\n\t\t\t<Router>\n\t\t\t\t<Nav/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={[process.env.PUBLIC_URL + \"/\", process.env.PUBLIC_URL + \"/home\"]}>\n\t\t\t\t\t\t<Home/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path={process.env.PUBLIC_URL + \"/create\"}>\n\t\t\t\t\t\t<Creator wordSets={this.state.words} addWord={this.addCurrentPair} pair={this.state.currentPair} change={this.setCurrentPair} editHandler={this.editIndex} editing={this.editCurrent} del={this.deleteIndex}/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path={process.env.PUBLIC_URL + \"/cards\"}>\n\t\t\t\t\t\t<Flashcards card={this.state.words[this.state.currentIndex]} flipped={this.state.flipped} onNext={this.nextCard}/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route>\n\t\t\t\t\t\t<h1>Error 404. Page not found.</h1>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Route from './components/Route.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Route />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}